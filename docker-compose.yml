version: '2'
networks:
  kafka-net:
    name: kafka-net
    driver: bridge
services:
  #  In future, create a dockerized container for the server, then make the 2 db images as dependencies
  mongo_db:
    container_name: mongo-service
    image: mongo
    environment:
      -  MONGO_INITDB_ROOT_USERNAME=mongo_mmo_server
      -  MONGO_INITDB_ROOT_PASSWORD=mongo_password
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - kafka-net
    tmpfs: "/datalog"
  kafka1:
    container_name: kafka-broker
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    networks:
      - kafka-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ZOOKEEPER_SASL_ENABLED: "false"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,SASL_PLAINTEXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_NUM_PARTITIONS: 2
      #     https://github.com/robcowart/docker_compose_cookbook/blob/master/confluent_kafka_oss/docker-compose.yml
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./configs:/etc/kafka/configs
    restart: always
volumes:
  mongodata:
    driver: local
  cache:
    driver: local